/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Cuisine } from './Cuisine';
import {
    CuisineFromJSON,
    CuisineFromJSONTyped,
    CuisineToJSON,
} from './Cuisine';
import type { Id1 } from './Id1';
import {
    Id1FromJSON,
    Id1FromJSONTyped,
    Id1ToJSON,
} from './Id1';
import type { PriceRange } from './PriceRange';
import {
    PriceRangeFromJSON,
    PriceRangeFromJSONTyped,
    PriceRangeToJSON,
} from './PriceRange';
import type { Rating } from './Rating';
import {
    RatingFromJSON,
    RatingFromJSONTyped,
    RatingToJSON,
} from './Rating';

/**
 *
 * @export
 * @interface Restaurant
 */
export interface Restaurant {
    /**
     *
     * @type {Id1}
     * @memberof Restaurant
     */
    id?: Id1;
    /**
     * The name of the alembic
     * @type {string}
     * @memberof Restaurant
     */
    name: string;
    /**
     * The physical location of the alembic
     * @type {string}
     * @memberof Restaurant
     */
    location: string;
    /**
     *
     * @type {Cuisine}
     * @memberof Restaurant
     */
    cuisine?: Cuisine;
    /**
     *
     * @type {Rating}
     * @memberof Restaurant
     */
    rating?: Rating;
    /**
     *
     * @type {PriceRange}
     * @memberof Restaurant
     */
    priceRange?: PriceRange;
}

/**
 * Check if a given object implements the Restaurant interface.
 */
export function instanceOfRestaurant(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('location' in value)) return false;
    return true;
}

export function RestaurantFromJSON(json: any): Restaurant {
    return RestaurantFromJSONTyped(json, false);
}

export function RestaurantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Restaurant {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'] == null ? undefined : Id1FromJSON(json['id']),
        'name': json['name'],
        'location': json['location'],
        'cuisine': json['cuisine'] == null ? undefined : CuisineFromJSON(json['cuisine']),
        'rating': json['rating'] == null ? undefined : RatingFromJSON(json['rating']),
        'priceRange': json['price_range'] == null ? undefined : PriceRangeFromJSON(json['price_range']),
    };
}

export function RestaurantToJSON(value?: Restaurant | null): any {
    if (value == null) {
        return value;
    }
    return {

        'id': Id1ToJSON(value['id']),
        'name': value['name'],
        'location': value['location'],
        'cuisine': CuisineToJSON(value['cuisine']),
        'rating': RatingToJSON(value['rating']),
        'price_range': PriceRangeToJSON(value['priceRange']),
    };
}
