/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Cuisine1 } from "./Cuisine1";
import {
  Cuisine1FromJSON,
  Cuisine1FromJSONTyped,
  Cuisine1ToJSON,
} from "./Cuisine1";
import type { Id1 } from "./Id1";
import { Id1FromJSON, Id1FromJSONTyped, Id1ToJSON } from "./Id1";
import type { Location } from "./Location";
import {
  LocationFromJSON,
  LocationFromJSONTyped,
  LocationToJSON,
} from "./Location";
import type { Name } from "./Name";
import { NameFromJSON, NameFromJSONTyped, NameToJSON } from "./Name";
import type { PriceRange1 } from "./PriceRange1";
import {
  PriceRange1FromJSON,
  PriceRange1FromJSONTyped,
  PriceRange1ToJSON,
} from "./PriceRange1";
import type { Rating1 } from "./Rating1";
import {
  Rating1FromJSON,
  Rating1FromJSONTyped,
  Rating1ToJSON,
} from "./Rating1";

/**
 *
 * @export
 * @interface RestaurantQuery
 */
export interface RestaurantQuery {
  /**
   *
   * @type {Id1}
   * @memberof RestaurantQuery
   */
  id?: Id1;
  /**
   *
   * @type {Name}
   * @memberof RestaurantQuery
   */
  name?: Name;
  /**
   *
   * @type {Location}
   * @memberof RestaurantQuery
   */
  location?: Location;
  /**
   *
   * @type {Cuisine1}
   * @memberof RestaurantQuery
   */
  cuisine?: Cuisine1;
  /**
   *
   * @type {Rating1}
   * @memberof RestaurantQuery
   */
  rating?: Rating1;
  /**
   *
   * @type {PriceRange1}
   * @memberof RestaurantQuery
   */
  priceRange?: PriceRange1;
}

/**
 * Check if a given object implements the RestaurantQuery interface.
 */
export function instanceOfRestaurantQuery(value: object): boolean {
  return true;
}

export function RestaurantQueryFromJSON(json: any): RestaurantQuery {
  return RestaurantQueryFromJSONTyped(json, false);
}

export function RestaurantQueryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RestaurantQuery {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : Id1FromJSON(json["id"]),
    name: json["name"] == null ? undefined : NameFromJSON(json["name"]),
    location:
      json["location"] == null ? undefined : LocationFromJSON(json["location"]),
    cuisine:
      json["cuisine"] == null ? undefined : Cuisine1FromJSON(json["cuisine"]),
    rating:
      json["rating"] == null ? undefined : Rating1FromJSON(json["rating"]),
    priceRange:
      json["price_range"] == null
        ? undefined
        : PriceRange1FromJSON(json["price_range"]),
  };
}

export function RestaurantQueryToJSON(value?: RestaurantQuery | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: Id1ToJSON(value["id"]),
    name: NameToJSON(value["name"]),
    location: LocationToJSON(value["location"]),
    cuisine: Cuisine1ToJSON(value["cuisine"]),
    rating: Rating1ToJSON(value["rating"]),
    price_range: PriceRange1ToJSON(value["priceRange"]),
  };
}
