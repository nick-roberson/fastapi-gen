/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Id1 } from './Id1';
import {
    Id1FromJSON,
    Id1FromJSONTyped,
    Id1ToJSON,
} from './Id1';
import type { PartySize } from './PartySize';
import {
    PartySizeFromJSON,
    PartySizeFromJSONTyped,
    PartySizeToJSON,
} from './PartySize';
import type { ReservationTime } from './ReservationTime';
import {
    ReservationTimeFromJSON,
    ReservationTimeFromJSONTyped,
    ReservationTimeToJSON,
} from './ReservationTime';
import type { RestaurantId } from './RestaurantId';
import {
    RestaurantIdFromJSON,
    RestaurantIdFromJSONTyped,
    RestaurantIdToJSON,
} from './RestaurantId';
import type { SpecialRequests1 } from './SpecialRequests1';
import {
    SpecialRequests1FromJSON,
    SpecialRequests1FromJSONTyped,
    SpecialRequests1ToJSON,
} from './SpecialRequests1';
import type { UserId } from './UserId';
import {
    UserIdFromJSON,
    UserIdFromJSONTyped,
    UserIdToJSON,
} from './UserId';

/**
 * 
 * @export
 * @interface ReservationQuery
 */
export interface ReservationQuery {
    /**
     * 
     * @type {Id1}
     * @memberof ReservationQuery
     */
    id?: Id1;
    /**
     * 
     * @type {RestaurantId}
     * @memberof ReservationQuery
     */
    restaurantId?: RestaurantId;
    /**
     * 
     * @type {UserId}
     * @memberof ReservationQuery
     */
    userId?: UserId;
    /**
     * 
     * @type {ReservationTime}
     * @memberof ReservationQuery
     */
    reservationTime?: ReservationTime;
    /**
     * 
     * @type {PartySize}
     * @memberof ReservationQuery
     */
    partySize?: PartySize;
    /**
     * 
     * @type {SpecialRequests1}
     * @memberof ReservationQuery
     */
    specialRequests?: SpecialRequests1;
}

/**
 * Check if a given object implements the ReservationQuery interface.
 */
export function instanceOfReservationQuery(value: object): boolean {
    return true;
}

export function ReservationQueryFromJSON(json: any): ReservationQuery {
    return ReservationQueryFromJSONTyped(json, false);
}

export function ReservationQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : Id1FromJSON(json['id']),
        'restaurantId': json['restaurant_id'] == null ? undefined : RestaurantIdFromJSON(json['restaurant_id']),
        'userId': json['user_id'] == null ? undefined : UserIdFromJSON(json['user_id']),
        'reservationTime': json['reservation_time'] == null ? undefined : ReservationTimeFromJSON(json['reservation_time']),
        'partySize': json['party_size'] == null ? undefined : PartySizeFromJSON(json['party_size']),
        'specialRequests': json['special_requests'] == null ? undefined : SpecialRequests1FromJSON(json['special_requests']),
    };
}

export function ReservationQueryToJSON(value?: ReservationQuery | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': Id1ToJSON(value['id']),
        'restaurant_id': RestaurantIdToJSON(value['restaurantId']),
        'user_id': UserIdToJSON(value['userId']),
        'reservation_time': ReservationTimeToJSON(value['reservationTime']),
        'party_size': PartySizeToJSON(value['partySize']),
        'special_requests': SpecialRequests1ToJSON(value['specialRequests']),
    };
}

