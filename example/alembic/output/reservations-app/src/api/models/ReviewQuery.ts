/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Comment1 } from "./Comment1";
import {
  Comment1FromJSON,
  Comment1FromJSONTyped,
  Comment1ToJSON,
} from "./Comment1";
import type { Id1 } from "./Id1";
import { Id1FromJSON, Id1FromJSONTyped, Id1ToJSON } from "./Id1";
import type { Rating1 } from "./Rating1";
import {
  Rating1FromJSON,
  Rating1FromJSONTyped,
  Rating1ToJSON,
} from "./Rating1";
import type { RestaurantId } from "./RestaurantId";
import {
  RestaurantIdFromJSON,
  RestaurantIdFromJSONTyped,
  RestaurantIdToJSON,
} from "./RestaurantId";
import type { UserId } from "./UserId";
import { UserIdFromJSON, UserIdFromJSONTyped, UserIdToJSON } from "./UserId";

/**
 *
 * @export
 * @interface ReviewQuery
 */
export interface ReviewQuery {
  /**
   *
   * @type {Id1}
   * @memberof ReviewQuery
   */
  id?: Id1;
  /**
   *
   * @type {RestaurantId}
   * @memberof ReviewQuery
   */
  restaurantId?: RestaurantId;
  /**
   *
   * @type {UserId}
   * @memberof ReviewQuery
   */
  userId?: UserId;
  /**
   *
   * @type {Rating1}
   * @memberof ReviewQuery
   */
  rating?: Rating1;
  /**
   *
   * @type {Comment1}
   * @memberof ReviewQuery
   */
  comment?: Comment1;
}

/**
 * Check if a given object implements the ReviewQuery interface.
 */
export function instanceOfReviewQuery(value: object): boolean {
  return true;
}

export function ReviewQueryFromJSON(json: any): ReviewQuery {
  return ReviewQueryFromJSONTyped(json, false);
}

export function ReviewQueryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ReviewQuery {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : Id1FromJSON(json["id"]),
    restaurantId:
      json["restaurant_id"] == null
        ? undefined
        : RestaurantIdFromJSON(json["restaurant_id"]),
    userId:
      json["user_id"] == null ? undefined : UserIdFromJSON(json["user_id"]),
    rating:
      json["rating"] == null ? undefined : Rating1FromJSON(json["rating"]),
    comment:
      json["comment"] == null ? undefined : Comment1FromJSON(json["comment"]),
  };
}

export function ReviewQueryToJSON(value?: ReviewQuery | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: Id1ToJSON(value["id"]),
    restaurant_id: RestaurantIdToJSON(value["restaurantId"]),
    user_id: UserIdToJSON(value["userId"]),
    rating: Rating1ToJSON(value["rating"]),
    comment: Comment1ToJSON(value["comment"]),
  };
}
