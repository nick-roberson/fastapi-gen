/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Email } from "./Email";
import { EmailFromJSON, EmailFromJSONTyped, EmailToJSON } from "./Email";
import type { Id1 } from "./Id1";
import { Id1FromJSON, Id1FromJSONTyped, Id1ToJSON } from "./Id1";
import type { PhoneNumber1 } from "./PhoneNumber1";
import {
  PhoneNumber1FromJSON,
  PhoneNumber1FromJSONTyped,
  PhoneNumber1ToJSON,
} from "./PhoneNumber1";
import type { Preferences1 } from "./Preferences1";
import {
  Preferences1FromJSON,
  Preferences1FromJSONTyped,
  Preferences1ToJSON,
} from "./Preferences1";
import type { Role1 } from "./Role1";
import { Role1FromJSON, Role1FromJSONTyped, Role1ToJSON } from "./Role1";
import type { Username } from "./Username";
import {
  UsernameFromJSON,
  UsernameFromJSONTyped,
  UsernameToJSON,
} from "./Username";

/**
 *
 * @export
 * @interface UserQuery
 */
export interface UserQuery {
  /**
   *
   * @type {Id1}
   * @memberof UserQuery
   */
  id?: Id1;
  /**
   *
   * @type {Username}
   * @memberof UserQuery
   */
  username?: Username;
  /**
   *
   * @type {Email}
   * @memberof UserQuery
   */
  email?: Email;
  /**
   *
   * @type {PhoneNumber1}
   * @memberof UserQuery
   */
  phoneNumber?: PhoneNumber1;
  /**
   *
   * @type {Preferences1}
   * @memberof UserQuery
   */
  preferences?: Preferences1;
  /**
   *
   * @type {Role1}
   * @memberof UserQuery
   */
  role?: Role1;
}

/**
 * Check if a given object implements the UserQuery interface.
 */
export function instanceOfUserQuery(value: object): boolean {
  return true;
}

export function UserQueryFromJSON(json: any): UserQuery {
  return UserQueryFromJSONTyped(json, false);
}

export function UserQueryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserQuery {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : Id1FromJSON(json["id"]),
    username:
      json["username"] == null ? undefined : UsernameFromJSON(json["username"]),
    email: json["email"] == null ? undefined : EmailFromJSON(json["email"]),
    phoneNumber:
      json["phone_number"] == null
        ? undefined
        : PhoneNumber1FromJSON(json["phone_number"]),
    preferences:
      json["preferences"] == null
        ? undefined
        : Preferences1FromJSON(json["preferences"]),
    role: json["role"] == null ? undefined : Role1FromJSON(json["role"]),
  };
}

export function UserQueryToJSON(value?: UserQuery | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: Id1ToJSON(value["id"]),
    username: UsernameToJSON(value["username"]),
    email: EmailToJSON(value["email"]),
    phone_number: PhoneNumber1ToJSON(value["phoneNumber"]),
    preferences: Preferences1ToJSON(value["preferences"]),
    role: Role1ToJSON(value["role"]),
  };
}
