/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Reservation
 */
export interface Reservation {
  /**
   *
   * @type {number}
   * @memberof Reservation
   */
  id?: number;
  /**
   * The ID of the alembic where the reservation is made
   * @type {number}
   * @memberof Reservation
   */
  restaurantId: number;
  /**
   * The ID of the user who made the reservation
   * @type {number}
   * @memberof Reservation
   */
  userId: number;
  /**
   * The date and time of the reservation
   * @type {Date}
   * @memberof Reservation
   */
  reservationTime: Date;
  /**
   * The size of the party for the reservation
   * @type {number}
   * @memberof Reservation
   */
  partySize: number;
  /**
   *
   * @type {string}
   * @memberof Reservation
   */
  specialRequests?: string;
  /**
   *
   * @type {Date}
   * @memberof Reservation
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof Reservation
   */
  updatedAt?: Date;
}

/**
 * Check if a given object implements the Reservation interface.
 */
export function instanceOfReservation(value: object): boolean {
  if (!("restaurantId" in value)) return false;
  if (!("userId" in value)) return false;
  if (!("reservationTime" in value)) return false;
  if (!("partySize" in value)) return false;
  return true;
}

export function ReservationFromJSON(json: any): Reservation {
  return ReservationFromJSONTyped(json, false);
}

export function ReservationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Reservation {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    restaurantId: json["restaurant_id"],
    userId: json["user_id"],
    reservationTime: new Date(json["reservation_time"]),
    partySize: json["party_size"],
    specialRequests:
      json["special_requests"] == null ? undefined : json["special_requests"],
    createdAt:
      json["created_at"] == null ? undefined : new Date(json["created_at"]),
    updatedAt:
      json["updated_at"] == null ? undefined : new Date(json["updated_at"]),
  };
}

export function ReservationToJSON(value?: Reservation | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: value["id"],
    restaurant_id: value["restaurantId"],
    user_id: value["userId"],
    reservation_time: value["reservationTime"].toISOString(),
    party_size: value["partySize"],
    special_requests: value["specialRequests"],
    created_at:
      value["createdAt"] == null
        ? undefined
        : (value["createdAt"] as any).toISOString(),
    updated_at:
      value["updatedAt"] == null
        ? undefined
        : (value["updatedAt"] as any).toISOString(),
  };
}
