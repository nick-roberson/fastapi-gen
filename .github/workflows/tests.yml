name: Run Tests

on: [push]

jobs:
  build_and_setup:
    runs-on: ubuntu-latest
    outputs:
      mysql_host: ${{ steps.db_setup.outputs.mysql_host }}
      mysql_port: ${{ steps.db_setup.outputs.mysql_port }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'
          architecture: 'x64'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create Additional Databases
        id: db_setup
        run: |
          mysql --host 127.0.0.1 --port 3306 --user root --password=root -e "CREATE DATABASE IF NOT EXISTS test_events_app;"
          mysql --host 127.0.0.1 --port 3306 --user root --password=root -e "CREATE DATABASE IF NOT EXISTS test_restaurant_app;"
          echo "::set-output name=mysql_host::127.0.0.1"
          echo "::set-output name=mysql_port::3306"

      - name: Install Backend Dependencies
        run: |
          echo "Installing Backend Dependencies"
          python -m pip install --upgrade pip
          pip install poetry coverage
          poetry install

  test:
    needs: build_and_setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'
          architecture: 'x64'

      - name: Test Sample Events App
        env:
          DB_HOST: ${{ needs.build_and_setup.outputs.mysql_host }}
          DB_PORT: ${{ needs.build_and_setup.outputs.mysql_port }}
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: test_events_app
        run: |
          echo "Running Tests"
          poetry run coverage run -m pytest builder/tests/test_events_app.py --verbose
          poetry run coverage report -m

      - name: Test Sample Restaurant App
        env:
          DB_HOST: ${{ needs.build_and_setup.outputs.mysql_host }}
          DB_PORT: ${{ needs.build_and_setup.outputs.mysql_port }}
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: test_restaurant_app
        run: |
          echo "Running Tests"
          poetry run coverage run -m pytest builder/tests/test_restaurant_app.py --verbose
          poetry run coverage report -m

      - name: Run Unit Tests
        run: |
          echo "Running Unit Tests"
          poetry run coverage run -m pytest builder/generate --verbose
          poetry run coverage report -m
