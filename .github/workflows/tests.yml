name: Run Tests and Build

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: testdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'
          architecture: 'x64'
      - name: Install Homebrew and OpenAPI Generator
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install openapi-generator
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Create Additional Databases
        run: |
          mysql --host 127.0.0.1 --port 3306 --user root --password=root -e "CREATE DATABASE IF NOT EXISTS test_events_app;"
          mysql --host 127.0.0.1 --port 3306 --user root --password=root -e "CREATE DATABASE IF NOT EXISTS test_restaurant_app;"

  cli-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run CLI Tests
        run: |
          export DB_HOST=127.0.0.1
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD=root
          export DB_NAME=test_restaurant_app
          echo "Testing CLI commands"
          poetry run python main.py --help
          poetry run python main.py config --help
          poetry run python main.py app --help
          poetry run python main.py db --help
          poetry run python main.py data --help
          echo "Testing Create Entire App"
          poetry run python main.py app create --config example/alembic/restaurant.yaml

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit and End-to-End Tests
        run: |
          echo "Running Unit and E2E Tests"
          export VERBOSE=1
          export DB_HOST=127.0.0.1
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD=root
          export DB_NAME=test_restaurant_app
          poetry run coverage run --source=builder -m pytest builder/ --verbose
          poetry run coverage report -m

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [cli-tests, unit-tests]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build the package
        run: python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
